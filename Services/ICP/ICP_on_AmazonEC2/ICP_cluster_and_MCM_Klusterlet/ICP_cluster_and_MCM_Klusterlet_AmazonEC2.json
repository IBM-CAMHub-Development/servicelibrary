{
	"service": {
		"specVersion": "v3",
		"catalog_metadata": {
			"name": "ICP cluster with klusterlet on Amazon EC2",
			"description": "Deploy ICP cluster onto Amazon EC2, loads the MCM docker images and deploys the MCM Klusterlet to make this a managed cluster.",
			"image": "serviceicon_1.svg",
			"category": "ICP on Amazon EC2",
			"bullets": [
				{
					"title": "Cloud Provider",
					"description": "Amazon EC2"
				}
			],
			"providerDisplayName": "Amazon EC2",
			"longDescription": "Deploy ICP cluster onto Amazon EC2, loads the MCM docker images and deploys the MCM Klusterlet to make this a managed cluster.",
			"documentationUrl": "https://www.ibm.com/support/knowledgecenter/SS2L37_3.1.2.0/content/cam_content_overview_summary.html",
			"supportUrl": "https://www.ibm.com/support/knowledgecenter/SS2L37_3.1.2.0/cam_ordering_services.html",
			"bindable": false,
			"updatable": "",
			"systemTags": true,
			"author": "IBM"
		},
		"tags": [
			{
				"name": "Request_Group",
				"label": "Request_Group",
				"type": "string",
				"immutable": true,
				"hidden": false,
				"required": false,
				"secured": false,
				"description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
				"isSystemTag": true,
				"default": "${svc_instance.group}",
				"customtype": "string",
				"permission": "Read-Only"
			}, {
				"name": "Request_User",
				"label": "Request_User",
				"type": "string",
				"immutable": true,
				"hidden": false,
				"required": false,
				"secured": false,
				"description": "The user id of the current user that requested the provisioning of the template.",
				"isSystemTag": true,
				"default": "${svc_instance.owner}",
				"customtype": "string",
				"permission": "Read-Only"
			}, {
				"name": "Service_Name",
				"label": "Service_Name",
				"type": "string",
				"immutable": true,
				"hidden": false,
				"required": false,
				"secured": false,
				"description": "Name provided for the service instance by the end user at time of request",
				"isSystemTag": true,
				"default": "${svc_instance.name}",
				"customtype": "string",
				"permission": "Read-Only"
			}, {
				"name": "Service_Identifier",
				"label": "Service_Identifier",
				"type": "string",
				"immutable": true,
				"hidden": false,
				"required": false,
				"secured": false,
				"description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
				"isSystemTag": true,
				"default": "${svc_instance.service_instance_id}",
				"customtype": "string",
				"permission": "Read-Only"
			}
		],
		"actions": [
			{
				"type": "provision",
				"name": "Provision",
				"description": "Default action for deployment of service",
				"input_parameters": [
					{
						"name": "aws_region",
						"label": "AWS Region",
						"description": "AWS region to deploy your ICP cluster nodes. For an HA installation, the AWS selected region should have at least 3 availability zones.",
						"type": "string",
						"options": [
							{
								"value": "us-east-1",
								"label": "US East (N. Virginia)",
								"default": true
							}, {
								"value": "us-east-2",
								"label": "US East (Ohio)"
							}, {
								"value": "us-west-1",
								"label": "US West (N. California)"
							}, {
								"value": "us-west-2",
								"label": "US West (Oregon)"
							}, {
								"value": "us-gov-west-1",
								"label": "US GovCloud Region"
							}, {
								"value": "ca-central-1",
								"label": "Canada (Central)"
							}, {
								"value": "eu-west-1",
								"label": "EU (Ireland)"
							}, {
								"value": "eu-central-1",
								"label": "EU (Frankfurt)"
							}, {
								"value": "eu-west-2",
								"label": "EU (London)"
							}, {
								"value": "ap-northeast-1",
								"label": "Asia Pacific (Tokyo)"
							}, {
								"value": "ap-northeast-2",
								"label": "Asia Pacific (Seoul)"
							}, {
								"value": "ap-southeast-1",
								"label": "Asia Pacific (Singapore)"
							}, {
								"value": "ap-southeast-2",
								"label": "Asia Pacific (Sydney)"
							}, {
								"value": "ap-south-1",
								"label": "Asia Pacific (Mumbai)"
							}, {
								"value": "sa-east-1",
								"label": "South America (SÃ£o Paulo)"
							}
						],
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_azs",
						"label": "Availability Zones",
						"description": "The availability zone letter identifier in the above selected region. For high availability should have at least 3 availability zones. Setting to a single availability zone will disable high availability and not provision EFS, in this case, reduce the number of master and proxy nodes to 1. If you are installing this service from ICP Catalog, your input should look like [\"a\", \"b\"]",
						"type": "list",
						"default": ["a", "b", "c"],
						"validation": "",
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_key_name",
						"label": "Key Name",
						"description": "Name of the EC2 key pair.",
						"type": "string",
						"group_name": "Globals",
						"required": false,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_privatekey",
						"label": "Private Key",
						"description": "Base64 encoded private key file contents of the EC2 key pair.",
						"type": "string",
						"group_name": "Globals",
						"required": false,
						"secured": true,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false,
						"regex": "(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)$",
						"regexdesc": "Enter a valid base64 encoded text. Base64 encoded text contains alphanumeric characters and equals symbol as padding."
					}, {
						"name": "aws_vpcname",
						"label": "VPC Name",
						"description": "AWS VPC Name prefix. This value is used to prefix the VPC created for ICP nodes.",
						"type": "string",
						"default": "icp-vpc",
						"group_name": "Networking",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_cidr",
						"label": "VPC CIDR block",
						"description": "AWS VPC CIDR block. This is the primary CIDR block for your ICP node VPC.",
						"type": "string",
						"default": "10.10.0.0/16",
						"group_name": "Networking",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_subnetname",
						"label": "Subnet Name",
						"description": "Subnet name prefix for public and private subnets used by ICP nodes.",
						"type": "string",
						"default": "icp-subnet",
						"group_name": "Networking",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_subnet_cidrs",
						"label": "Private Subnet CIDRs",
						"description": "List of subnet CIDRs. Total number of CIDR entry must match the number of availability zone provided above. A CIDR value is used in the creation of a private subnet in an availability zone for the worker nodes. If you are installing this service from ICP Catalog, your input should look like [\"10.10.10.0/24\", \"10.10.11.0/24\"]",
						"type": "list",
						"default": ["10.10.10.0/24", "10.10.11.0/24", "10.10.12.0/24"],
						"group_name": "Networking",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_pub_subnet_cidrs",
						"label": "Public Subnet CIDRs",
						"description": "List of subnet CIDRs. Total number of CIDR entry must match the number of availability zone provided above. A CIDR value is used in the creation of a public subnet in an availability zone for the proxy and management nodes. If you are installing this service from ICP Catalog, your input should look like [\"10.10.20.0/24\", \"10.10.21.0/24\"]",
						"type": "list",
						"default": ["10.10.20.0/24", "10.10.21.0/24", "10.10.22.0/24"],
						"group_name": "Networking",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_private_domain",
						"label": "Private Domain",
						"description": "Private domain name that is used to create route53 name.",
						"type": "string",
						"default": "icp-cluster.icp",
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "aws_ami",
						"label": "Amazon Machine Image (AMI-ID)",
						"description": "Default Amazon Machine Image ID that will be used if AMI ID for individual node is not provided.",
						"type": "string",
						"group_name": "Globals",
						"options": [
							{
								"value": "ami-0f9cf087c1f27d9b1",
								"label": "us-east-1  - Ubuntu 16.04",
								"default": "true"
							}, {
								"value": "ami-0653e888ec96eab9b",
								"label": "us-east-2  - Ubuntu 16.04"
							}, {
								"value": "ami-007927d10cda943c7",
								"label": "us-west-1  - Ubuntu 16.04"
							}, {
								"value": "ami-01dd90796d1ad1ae8",
								"label": "us-west-2  - Ubuntu 16.04"
							}
						],
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_bastion",
						"label": "Bastion Node",
						"description": "Bastion host that you can use to ssh into ICP cluster nodes. Can be used for debugging purpose.",
						"type": "map",
						"default": {
							"nodes": "1",
							"type": "t2.micro",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "10"
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_master",
						"label": "Master Node",
						"description": "Master node details. Each master node will be created in a different AZS. Number of AZS, public subnet and private subnet must match the number of master node.",
						"type": "map",
						"default": {
							"nodes": "1",
							"type": "m4.2xlarge",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "300",
							"docker_vol": "100",
							"ebs_optimized": true
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_proxy",
						"label": "Proxy Node",
						"description": "Proxy node details. Each proxy node will be created in a different AZS. Number of AZS, public subnet and private subnet must match the number of proxy node.",
						"type": "map",
						"default": {
							"nodes": "1",
							"type": "m4.xlarge",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "150",
							"docker_vol": "100",
							"ebs_optimized": true
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_management",
						"label": "Management Node",
						"description": "Management node details. Each management node will be created in a different AZS. Number of AZS, public subnet and private subnet must match the number of management node.",
						"type": "map",
						"default": {
							"nodes": "1",
							"type": "m4.2xlarge",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "300",
							"docker_vol": "100",
							"ebs_optimized": true
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_worker",
						"label": "Worker Node",
						"description": "Worker node details. Each worker node will be created in a different AZS. Number of AZS, public subnet and private subnet must match the number of worker node.",
						"type": "map",
						"default": {
							"nodes": "1",
							"type": "m4.2xlarge",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "150",
							"docker_vol": "100",
							"ebs_optimized": true
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_va",
						"label": "Vulnerability Advisor Node",
						"description": "Vulnerability Advisor node details. Each VA node will be created in a different AZS. Number of AZS, public subnet and private subnet must match the number of VA node.",
						"type": "map",
						"default": {
							"nodes": "0",
							"type": "m4.2xlarge",
							"ami": "ami-0f9cf087c1f27d9b1",
							"disk": "300",
							"docker_vol": "100",
							"ebs_optimized": true
						},
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": true,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_instance_name",
						"label": "Cluster Name",
						"description": "ICP Cluster Name",
						"type": "string",
						"default": "icp",
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false,
						"regex": "(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)",
						"regexdesc": "Cluster name can have lower case alphabets, numbers and dash. Must start with lower case alphabet and end with alpha-numeric character. Maximum length is 63 characters."
					}, {
						"name": "icp_password",
						"label": "ICP Password",
						"description": "ICP user password",
						"type": "password",
						"group_name": "Globals",
						"required": false,
						"secured": true,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_docker_package_location",
						"label": "Docker Package Location",
						"description": "Docker package location is required when installing ICP EE on RedHat. Prefix the location string with protocol. Example s3://, http:// or nfs://. ",
						"type": "string",
						"group_name": "Globals",
						"required": false,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_image_location",
						"label": "ICP EE Image Location",
						"description": "Image location of ICP EE. Prefix the location string with protocol Example: s3://, http:// or nfs://.",
						"type": "string",
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "icp_inception_image",
						"label": "ICP Inception Image",
						"description": "Name of the bootstrap installation image.",
						"type": "string",
						"default": "ibmcom/icp-inception-amd64:3.1.1-ee",
						"group_name": "Globals",
						"required": true,
						"secured": false,
						"hidden": false,
						"immutable": false,
						"immutable_after_create": false
					}, {
						"name": "mcm_binary_url",
						"description": "Location of the MCM Binaries used by IBM Cloud Private",
						"type": "string",
						"required": true,
						"secured": false,
						"label": "MCM Download Location (http|https|ftp|file)",
						"hidden": false,
						"immutable": false,
						"regex": "(https?|ftp|file)://[-A-Za-z0-9\\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\\+&@#/%=~_|]",
						"regexdesc": "http|https|ftp|file Location to download the IBM Cloud Private Binaries",
						"group_name": "MCM"
					}, {
						"name": "mcm_secret_name",
						"description": "IBM MCM Secret Name",
						"default": "mcm-secret",
						"type": "string",
						"required": false,
						"secured": false,
						"label": "MCM Secret Name",
						"hidden": true,
						"immutable": false,
						"regex": "^[a-z0-9.-]{1,80}$",
						"group_name": "MCM"
					}, {
						"name": "mcm_klusterlet-apiserverConfig-server",
						"label": "Hub Cluster Kubernetes API Server",
						"customtype": "string",
						"type": "string",
						"immutable": false,
						"hidden": false,
						"required": true,
						"secured": false,
						"description": "Kubernetes API Server URL for the Hub-Cluster from kubectl config"						
					}, {
						"name": "mcm_klusterlet-apiserverConfig-token",
						"label": "Hub Cluster Kubernetes API server token",
						"customtype": "string",
						"type": "string",
						"immutable": false,
						"hidden": false,
						"required": true,
						"secured": false,
						"description": "Kubernetes API Server token for the Hub-Cluster from kubectl config."
					}
				],
				"flow": {
					"conditions": [],
					"templates": [
						{
							"IBM Cloud Private highly-available cluster in AWS": {
								"title": "IBM Cloud Private highly-available cluster in AWS_49c475",
								"template_name": "IBM Cloud Private highly-available cluster",
								"version": "3.1.1",
								"id": "ibmcloud069f4701",
								"template_type": "Terraform",
								"template_content_type": "Amazon EC2",
								"template_provider": "Amazon EC2",
								"instance_name": "managedicp",
								"cloud_connection_name": "AWS",
								"template_data_objects": {},
								"template_params": {
									"aws_region": "${input_parameters.aws_region}",
									"azs": "${input_parameters.aws_azs}",
									"key_name": "${input_parameters.aws_key_name}",
									"privatekey": "${input_parameters.aws_privatekey}",
									"vpcname": "${input_parameters.aws_vpcname}",
									"cidr": "${input_parameters.aws_cidr}",
									"subnetname": "${input_parameters.aws_subnetname}",
									"subnet_cidrs": "${input_parameters.aws_subnet_cidrs}",
									"pub_subnet_cidrs": "${input_parameters.aws_pub_subnet_cidrs}",
									"private_domain": "${input_parameters.aws_private_domain}",
									"ami": "${input_parameters.aws_ami}",
									"bastion": "${input_parameters.icp_bastion}",
									"master": "${input_parameters.icp_master}",
									"proxy": "${input_parameters.icp_proxy}",
									"management": "${input_parameters.icp_management}",
									"worker": "${input_parameters.icp_worker}",
									"va": "${input_parameters.icp_va}",
									"instance_name": "${input_parameters.icp_instance_name}",
									"icppassword": "${input_parameters.icp_password}",
									"docker_package_location": "${input_parameters.icp_docker_package_location}",
									"image_location": "${input_parameters.icp_image_location}",
									"icp_inception_image": "${input_parameters.icp_inception_image}"
								},
								"outputs": ["ICP_Console_ELB_DNS", "ICP_Proxy_ELB_DNS_internal", "ICP_Console_URL", "ICP_Registry_ELB_URL", "ICP_Kubernetes_API_URL", "ICP_Admin_Username", "ICP_Admin_Password", "bootmaster", "vm_os_private_key", "bastion_host", "cluster_ca_domain", "connection_name","icp_klusterlet_dns"]
							}
						}, {
							"IBM Multicloud Manager": {
								"title": "IBM Multicloud Manager_382da7",
								"template_name": "IBM Multicloud Manager",
								"version": "3.1.1",
								"id": "ibmmulti0d9ad0c7",
								"template_type": "Terraform",
								"template_content_type": "Other",
								"template_provider": "Other",
								"instance_name": "mcm",
								"cloud_connection_name": "Other",
								"template_data_objects": {
									"bastionhost": "${templates.ibmcloud069f4701.output.connection_name}BastionHost"
								},
								"template_params": {
									"bastion_host": "${bastionhost.bastion_host}",
									"bastion_port": "${bastionhost.bastion_port}",
									"bastion_user": "${bastionhost.bastion_user}",
									"bastion_private_key": "${bastionhost.bastion_private_key}",
									"bastion_password": "${bastionhost.bastion_password}",
									"bastion_host_key": "${bastionhost.bastion_host_key}",
									"boot_ipv4_address": "${templates.ibmcloud069f4701.output.bootmaster}",
									"master_node_ip": "${templates.ibmcloud069f4701.output.bootmaster}",
									"vm_os_user": "icpdeploy",
									"vm_os_password": "",
									"vm_os_private_key": "${templates.ibmcloud069f4701.output.vm_os_private_key}",
									"icp_admin_user": "${templates.ibmcloud069f4701.output.ICP_Admin_Username}",
									"icp_admin_user_password": "${templates.ibmcloud069f4701.output.ICP_Admin_Password}",
									"cluster_ca_name": "${templates.ibmcloud069f4701.output.cluster_ca_domain}",
									"cluster_name": "${input_parameters.icp_instance_name}",
									"mcm_binary_url": "${input_parameters.mcm_binary_url}",
									"download_user": "",
									"download_user_password": "",
									"secret_name": "${input_parameters.mcm_secret_name}"
								},
								"outputs": ["ibm_cloud_private_master_ip"]
							}
						}, {
							"local-charts/ibm-mcmk-prod": {
								"title": "local-charts/ibm-mcmk-prod_dd4d96",
								"template_name": "ibm-mcmk-prod",
								"version": "3.1.1",
								"id": "localchadc0e6e9e",
								"template_type": "Helm",
								"template_content_type": "IBM Cloud Private",
								"template_provider": "IBM Cloud Private",
								"instance_name": "mcmk",
								"cloud_connection_name": "${templates.ibmcloud069f4701.output.connection_name}",
								"template_dataobjects": {},
								"template_params": {
									"namespace": "kube-system",
									"klusterlet-repository": "${templates.ibmcloud069f4701.output.cluster_ca_domain}:8500/kube-system/mcm-klusterlet",
									"klusterlet-tag": "3.1.1",
									"klusterlet-pullPolicy": "Always",
									"klusterlet-enabled": true,
									"klusterlet-clusterName": "${templates.ibmcloud069f4701.output.connection_name}hub",
									"klusterlet-clusterNamespace": "${templates.ibmcloud069f4701.output.connection_name}hub",
									"klusterlet-tillersecret": "",
									"klusterlet-autoGenTillerSecret": true,
									"klusterlet-tillerUser": "${templates.ibmcloud069f4701.output.ICP_Admin_Username}",
									"klusterlet-apiserverConfig-server": "${input_parameters.mcm_klusterlet-apiserverConfig-server}",
									"klusterlet-apiserverConfig-token": "${input_parameters.mcm_klusterlet-apiserverConfig-token}",
									"klusterlet-apiserverConfig-enableBootstrap": true,
									"klusterlet-deployedOnHub": false,
									"klusterlet-cloud": "AWS",
									"klusterlet-vendor": "ICP",
									"klusterlet-environment": "Dev",
									"klusterlet-region": "US",
									"klusterlet-datacenter": "toronto",
									"klusterlet-owner": "marketing",
									"klusterlet-prometheusAddress": "${templates.ibmcloud069f4701.output.icp_klusterlet_dns}",
									"klusterlet-prometheusPort": "443",
									"klusterlet-httpsProxy": "",
									"topology-enabled": true,
									"topology-enableAuth": true,
									"topology-updateInterval": 15,
									"topology-username": "${templates.ibmcloud069f4701.output.ICP_Admin_Username}",
									"topology-password": "${templates.ibmcloud069f4701.output.ICP_Admin_Password}",
									"topology-weave-image-repository": "${templates.ibmcloud069f4701.output.cluster_ca_domain}:8500/kube-system/mcm-weave-scope",
									"topology-weave-image-tag": "3.1.1",
									"topology-weave-image-pullPolicy": "Always",
									"router-image-repository": "${templates.ibmcloud069f4701.output.cluster_ca_domain}:8500/kube-system/icp-router",
									"router-image-tag": "2.2.0",
									"compliance-repository": "${templates.ibmcloud069f4701.output.cluster_ca_domain}:8500/kube-system/mcm-compliance",
									"compliance-tag": "3.1.1",
									"compliance-pullPolicy": "Always",
									"compliance-enabled": true,
									"logLevel": 5,
									"nodeSelector-enabled": false,
									"nodeSelector-arch": "",
									"nodeSelector-os": "",
									"nodeSelector-customLabelSelector": "",
									"nodeSelector-customLabelValue": "",
									"pullSecret-token": ""
								},
								"outputs": [],
								"template_repo": "local-charts"
							}
						}
					],
					"resthooks": [],
					"notifications": [],
					"sequence": {
						"0": "ibmcloud069f4701",
						"1": "ibmmulti0d9ad0c7",
						"2": "localchadc0e6e9e"
					},
					"error_sequence": {}
				},
				"output_parameters": []
			}
		],
		"plans": [
			{
				"name": "Generic EE with High Availability",
				"description": "ICP EE with High Availability",
				"actions": [],
				"plan_parameters": [],
				"expanded": false
			}
		]
	}
}
